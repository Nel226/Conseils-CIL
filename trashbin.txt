// Accéder aux éléments du tableau

 
    await getData();

 
async
 
Column(
                    )
 
tatus
 
onseils
 
Response
 
String
 
return response;
 
Conseils
 
'token', token
 

// Stocke le token
 
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

 
Conseil
 
import 'package:conseils_cil/models/conseils.g.dart';

 
appDocumeath
 
  final appDocumentDirectory = await getApplicationDocumentsDirectory();

 
  print('titre: ${box.get('titre')}');

 
var conseilsBox = Hive.box<Conseil>('conseils');
 
('name')
 
'Name:
 
box.put('name', 'David');

 
box.put('name', 'David');
 
oid main() async {
  WidgetsFlutterBinding.ensureInitialized();
  final appDocumentDirectory = await getApplicationDocumentsDirectory();
  await Hive.initFlutter(appDocumentDirectory.path);
  await Hive.openBox('conseils');

  var conseilsBox = Hive.box<Conseil>('conseils');

  // Liste des conseils à insérer
  List<Conseil> conseils = [
    Conseil('Conseil 1', 'Description du conseil 1', 'kdddkkk', true),
    Conseil('Conseil 2', 'Description du conseil 2', 'kdddkkk', true),
    Conseil('Conseil 3', 'Description du conseil 3', 'kdddkkk', true),
  ];

  // Boucle pour insérer chaque conseil dans la boîte
  for (var conseil in conseils) {
    conseilsBox.add(conseil);
  }

  runApp(const MyApp());
}

 
  conseilsBox.add(Conseil('securite', 'dffffffffff', 'dddddd', true));

 
ddddxxxxxx
 
taskName:
 
part 'document.g.dart';
 
this.favori
 
this.description, 
 
floatingActionButton: FloatingActionButton(

        onPressed: () async {
          getAllCategories();
        },
      ),
 
Beautiful scenery
 
print("choisir");
 

  @HiveField(3)
  late bool favori;
 
  @HiveField(1)
  late String description;
 
Conseils
 
var data = jsonDecode(response.body);
  print(data);
 
print(data);
  return response;
 
var response = await http.get(url, headers: headers);
  var data = jsonDecode(response.body);
 
await
 
SingleChildScrollView(
                            child: Card(
                              margin: EdgeInsets.all(16.0),
                              elevation: 4.0,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(15.0),
                              ),
                              
                            ),
                          ),
 
child: Container(
                                height:
                                    MediaQuery.of(context).size.height - 900.0,
                                decoration: BoxDecoration(
                                  gradient: LinearGradient(
                                    begin: Alignment.topLeft,
                                    end: Alignment.bottomRight,
                                    colors: [Colors.blue, Colors.green],
                                  ),
                                ),
                                child: Stack(
                                  children: [
                                    // Contenu de la carte
                                    Padding(
                                      padding: EdgeInsets.all(16.0),
                                      child: Column(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Protections sur les réseaux sociaux',
                                            style: TextStyle(
                                              fontSize: 24.0,
                                              fontWeight: FontWeight.bold,
                                            ),
                                            softWrap: true,
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.access_time),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Première ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.star),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Deuxième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.favorite),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Troisième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ),
 
return response;
 
  await saveToken(data);

 
  print(token2);

 
url
 
/ Données à envoyer au format JSON
 
ar jsonData = jsonEncode({
    'username': "evens",
    'password': "emos",
  });

 
String token = '';

Future<http.Response> login() async {
  var url = Uri.parse('http://192.168.11.101:3000/api/auth/login');

  // Données à envoyer au format JSON
  var jsonData = jsonEncode({
    'username': "evens",
    'password': "emos",
  });

  // En-têtes de la requête
  var headers = <String, String>{
    'Content-Type': 'application/json; charset=UTF-8',
  };
 
 // Envoi de la requête POST
  var response = await http.post(url, headers: headers, body: jsonData);
  Map<String, dynamic> data = jsonDecode(response.body);
  token = data["token"];
  await saveToken(token);
  String? token2 = await getToken();
  print(token);
  print(token2);
  return response;
}
 
Future<http.Response> getAllConseils() async {
  var url = Uri.parse('http://192.168.11.101:3000/api/conseils');

  // Données à envoyer au format JSON
  var jsonData = jsonEncode({
    'username': "evens",
    'password': "emos",
  });

  // En-têtes de la requête
  var headers = <String, String>{
    'Content-Type': 'application/json; charset=UTF-8',
  };

  // Envoi de la requête POST
  var response = await http.post(url, headers: headers, body: jsonData);
} 

 
import 'package:http/http.dart' as http;

void login() async {
  final response = await http.post(
    Uri.parse('https://192.168.11.101/api/auth/login'),
    body: {
      'username': 'evense',
      'password': 'emos',
    },
  );
}

 
0
 
C:\Users\HP\Documents\conseils_cil\assets\images\
 
png
 
alignment: Alignment.topCenter,
 
png
 
C:\Users\HP\Documents\conseils_cil\assets\images\
 
 Expanded(
        child: Scrollbar(
          child: ListView.builder(
            itemBuilder: (_, index) => ShopItemList(
              products[index],
              onRemove: () {
                setState(() {
                  products.remove(products[index]);
                });
              },
            ),
            itemCount: products.length,
          ),
        ),
      ),
 
// Assurez-vous d'avoir défini la couleur yellow quelque part
 
if (index == 0) {
                return Align(
                  alignment: Alignment.centerRight,
                  child: Container(
                    margin: const EdgeInsets.all(8.0),
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: theme.colorScheme.primary,
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Text(
                      'Hello',
                      style: theme.textTheme.bodyLarge!
                          .copyWith(color: theme.colorScheme.onPrimary),
                    ),
                  ),
                );
              }
              return Align(
                alignment: Alignment.centerLeft,
                child: Container(
                  margin: const EdgeInsets.all(8.0),
                  padding: const EdgeInsets.all(8.0),
                  decoration: BoxDecoration(
                    color: theme.colorScheme.primary,
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  child: Text(
                    'Hi!',
                    style: theme.textTheme.bodyLarge!
                        .copyWith(color: theme.colorScheme.onPrimary),
                  ),
                ),
              );
 
import 'package:conseils_cil/dao/dao_conseils.dart';
import 'package:flutter/material.dart';
import 'package:story_view/story_view.dart';
import 'quiz.dart';
import 'package:image_card/image_card.dart';
import 'package:conseils_cil/models/conseils.dart';
import 'package:hive_flutter/hive_flutter.dart';

class NavigationBarApp extends StatelessWidget {
  const NavigationBarApp({super.key});
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(useMaterial3: true),
      home: const HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int currentPageIndex = 0;
  final controller = StoryController();
  bool showStory = false;

  @override
  Widget build(BuildContext context) {
    final ThemeData theme = Theme.of(context);

    List<StoryItem> storyItems = [
      StoryItem.text(title: "Hello world!", backgroundColor: Colors.red),
      StoryItem.pageImage(
        url:
            'https://burkina24.com/wp-content/uploads/2022/08/2C5330B8-BBDB-4A1F-BC3A-C6554877AA3D.jpeg',
        caption: Text("Beautiful scenery"),
        controller: controller,
      ),
    ];

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Conseils CIL',
          style: TextStyle(
            color: Colors.white, // Couleur du texte en blanc
            fontWeight: FontWeight.bold, // Texte en gras
          ),
        ),
        backgroundColor: const Color(0xFF6FA562), // Couleur de fond verte
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          login();
        },
        backgroundColor: const Color(0xFF6FA562),
        child: const Icon(
          Icons.forum_rounded,
          color: Colors.white,
        ),
      ),
      bottomNavigationBar: NavigationBar(
        onDestinationSelected: (int index) {
          setState(() {
            currentPageIndex = index;
          });
        },
        indicatorColor: const Color(0xFF6FA562),
        selectedIndex: currentPageIndex,
        destinations: const <Widget>[
          NavigationDestination(
            selectedIcon: Badge(
              child: Icon(Icons.home_rounded, color: Colors.white),
            ),
            icon: Icon(Icons.home_rounded),
            label: 'Accueil',
          ),
          NavigationDestination(
            selectedIcon: Badge(
              child: Icon(Icons.lightbulb_rounded, color: Colors.white),
            ),
            icon: Badge(child: Icon(Icons.lightbulb_rounded)),
            label: 'Conseils',
          ),
          NavigationDestination(
            selectedIcon: Badge(
              label: Text('2', style: TextStyle(color: Colors.white)),
              child: Icon(Icons.help_rounded, color: Colors.white),
            ),
            icon: Badge(
              label: Text('2'),
              child: Icon(Icons.help_rounded),
            ),
            label: 'Quiz',
          ),
          NavigationDestination(
            selectedIcon: Icon(Icons.description_rounded, color: Colors.white),
            icon: Icon(Icons.description_rounded),
            label: 'Documents',
          ),
        ],
      ),
      body: IndexedStack(
        index: currentPageIndex,
        children: [
          // Home page

          Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              GestureDetector(
                onTap: () {
                  setState(() {
                    showStory = true;
                  });
                },
                child: Card(
                  elevation: 4.0,
                  shadowColor: const Color.fromARGB(255, 206, 209, 211),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10.0),
                  ),
                  child: Row(
                    children: [
                      Container(
                        width: 50.0,
                        height: 50.0,
                        margin: const EdgeInsets.all(
                            26.0), // Marge entre le cercle et le texte
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          border: Border.all(color: Colors.blue, width: 2.0),
                          color: Colors.green,
                        ),
                        child: const CircleAvatar(
                          backgroundImage: NetworkImage(
                            "https://burkina24.com/wp-content/uploads/2022/08/2C5330B8-BBDB-4A1F-BC3A-C6554877AA3D.jpeg",
                          ),
                          radius: 100,
                        ),
                      ),
                      Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          RichText(
                            text: const TextSpan(
                              text: 'A la une\n',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 16.0,
                                color: Colors.black,
                              ),
                              children: [
                                TextSpan(
                                  text:
                                      "Suivez l'actualité partagée par la CIL",
                                  style: TextStyle(
                                    fontSize: 14.0,
                                    color: Colors.black,
                                    fontStyle: FontStyle.italic,
                                    fontWeight: FontWeight.normal,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          // Autres widgets ici
                        ],
                      ),
                    ],
                  ),
                ),
              ),
              if (showStory)
                Expanded(
                  child: StoryView(
                    storyItems: storyItems,
                    controller: controller,
                    repeat: false,
                    inline: false,
                    onComplete: () {
                      Navigator.pop(context);
                    },
                  ),
                ),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                padding:
                    const EdgeInsets.symmetric(horizontal: 24, vertical: 16),
                child: Row(
                  children: [
                    // Première carte
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey,
                            width: 1,
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/bananas.jpg',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 1',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 1'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Deuxième carte
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Ajoutez les autres cartes de la même manière
                  ],
                ),
              ),
              Card(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15.0),
                ),
                elevation: 4,

                margin: EdgeInsets.all(10), // Marge autour de la carte
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.only(
                          topLeft: Radius.circular(15),
                          topRight: Radius.circular(15),
                        ),
                      ),
                      padding: EdgeInsets.all(10),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: <Widget>[
                          Text(
                            'La protection de vos données',
                            style: TextStyle(
                              color:
                                  Colors.black, // Couleur du texte de l'en-tête
                              fontWeight: FontWeight.bold, // Texte en gras
                            ),
                          ),
                          Divider(), // Diviseur entre l'en-tête et le corps
                        ],
                      ),
                    ),
                    Padding(
                      padding: EdgeInsets.all(10),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: <Widget>[
                          SizedBox(
                              height:
                                  5), // Espacement entre le titre et le contenu

                          SingleChildScrollView(
                            child: Card(
                              margin: EdgeInsets.all(16.0),
                              elevation: 4.0,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(15.0),
                              ),
                              child: Container(
                                height:
                                    MediaQuery.of(context).size.height - 300.0,
                                decoration: BoxDecoration(
                                  gradient: LinearGradient(
                                    begin: Alignment.topLeft,
                                    end: Alignment.bottomRight,
                                    colors: [Colors.blue, Colors.green],
                                  ),
                                ),
                                child: Stack(
                                  children: [
                                    // Contenu de la carte
                                    Padding(
                                      padding: EdgeInsets.all(16.0),
                                      child: Column(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Protections sur les réseaux sociaux',
                                            style: TextStyle(
                                              fontSize: 24.0,
                                              fontWeight: FontWeight.bold,
                                            ),
                                            softWrap: true,
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.access_time),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Première ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.star),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Deuxième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.favorite),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Troisième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              )
            ],
          ),

          // Notifications page

          const Padding(
            padding: EdgeInsets.all(28.0),
            child: Column(
              children: <Widget>[
                Padding(
                  padding: EdgeInsets.symmetric(vertical: 8.0),
                  child: Card(
                    child: ListTile(
                      leading: CircleAvatar(
                        backgroundColor:
                            Colors.blue, // Couleur de fond du cercle
                        child: Icon(
                          Icons.notifications_sharp,
                          color: Colors.white, // Couleur de l'icône
                        ),
                      ),
                      title: Text('Notification 1'),
                      subtitle: Text('This is a notification'),
                    ),
                  ),
                ),
              ],
            ),
          ),
          // Messages page
          ListView.builder(
            reverse: true,
            itemCount: 2,
            itemBuilder: (BuildContext context, int index) {
              if (index == 0) {
                return Align(
                  alignment: Alignment.centerRight,
                  child: Container(
                    margin: const EdgeInsets.all(8.0),
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: theme.colorScheme.primary,
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Text(
                      'Hello',
                      style: theme.textTheme.bodyLarge!
                          .copyWith(color: theme.colorScheme.onPrimary),
                    ),
                  ),
                );
              }
              return Align(
                alignment: Alignment.centerLeft,
                child: Container(
                  margin: const EdgeInsets.all(8.0),
                  padding: const EdgeInsets.all(8.0),
                  decoration: BoxDecoration(
                    color: theme.colorScheme.primary,
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  child: Text(
                    'Hi!',
                    style: theme.textTheme.bodyLarge!
                        .copyWith(color: theme.colorScheme.onPrimary),
                  ),
                ),
              );
            },
          ),
        ],
      ),
    );
  }
}

 
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: ConseilsPage(), // Utilisez la classe Quiz ici
    );
  }
}

class ConseilsPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Ma Page Simple'),
      ),
      body: Center(
        child: Text(
          'Bonjour, monde!',
          style: TextStyle(fontSize: 24),
        ),
      ),
    );
  }
}

 
conseils_page
 
class NavigationBarApp extends StatefulWidget {
  const NavigationBarApp({Key? key}) : super(key: key);

  @override
  _NavigationBarAppState createState() => _NavigationBarAppState();
}
 
  child:
 
Container
 
                return 

 
Align(
                  alignment: Alignment.centerRight,
                  child: Container(
                    margin: const EdgeInsets.all(8.0),
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: theme.colorScheme.primary,
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Text(
                      'Hello',
                      style: theme.textTheme.bodyLarge!
                          .copyWith(color: theme.colorScheme.onPrimary),
                    ),
                  ),
                );
 
Align(
                  alignment: Alignment.centerRight,
                  child: Container(
                    margin: const EdgeInsets.all(8.0),
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: theme.colorScheme.primary,
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Text(
                      'Hello',
                      style: theme.textTheme.bodyLarge!
                          .copyWith(color: theme.colorScheme.onPrimary),
                    ),
                  ),
                );
 
class NavigationBarApp extends StatelessWidget {
  const NavigationBarApp({super.key});
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(useMaterial3: true),
      home: const HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int currentPageIndex = 0;

  final controller = StoryController();
  bool showStory = false;

  @override
  Widget build(BuildContext context) {
    final ThemeData theme = Theme.of(context);

    List<StoryItem> storyItems = [
      StoryItem.text(title: "Hello world!", backgroundColor: Colors.red),
      StoryItem.pageImage(
        url:
            'https://burkina24.com/wp-content/uploads/2022/08/2C5330B8-BBDB-4A1F-BC3A-C6554877AA3D.jpeg',
        caption: Text("Beautiful scenery"),
        controller: controller,
      ),
    ];

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Conseils CIL',
          style: TextStyle(
            color: Colors.white, // Couleur du texte en blanc
            fontWeight: FontWeight.bold, // Texte en gras
          ),
        ),
        backgroundColor: const Color(0xFF6FA562), // Couleur de fond verte
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          login();
        },
        backgroundColor: const Color(0xFF6FA562),
        child: const Icon(
          Icons.forum_rounded,
          color: Colors.white,
        ),
      ),
      bottomNavigationBar: NavigationBar(
        currentIndex: currentPageIndex,
        onTap: (int index) {
          setState(() {
            currentPageIndex = index;
          });
        },
        onDestinationSelected: (int index) {},
        indicatorColor: const Color(0xFF6FA562),
        selectedIndex: currentPageIndex,
        destinations: const <Widget>[
          NavigationDestination(
            selectedIcon: Badge(
              child: Icon(Icons.home_rounded, color: Colors.white),
            ),
            icon: Icon(Icons.home_rounded),
            label: 'Accueil',
          ),
          NavigationDestination(
            selectedIcon: Badge(
              child: Icon(Icons.lightbulb_rounded, color: Colors.white),
            ),
            icon: Badge(child: Icon(Icons.lightbulb_rounded)),
            label: 'Conseils',
          ),
          NavigationDestination(
            selectedIcon: Badge(
              label: Text('2', style: TextStyle(color: Colors.white)),
              child: Icon(Icons.help_rounded, color: Colors.white),
            ),
            icon: Badge(
              label: Text('2'),
              child: Icon(Icons.help_rounded),
            ),
            label: 'Quiz',
          ),
          NavigationDestination(
            selectedIcon: Icon(Icons.description_rounded, color: Colors.white),
            icon: Icon(Icons.description_rounded),
            label: 'Documents',
          ),
        ],
      ),
      body: IndexedStack(
        index: currentPageIndex,
        children: [
          HomePage(),
          Quiz(),
        ],
        children: [
          Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              GestureDetector(
                onTap: () {
                  setState(() {
                    showStory = true;
                  });
                },
                child: Card(
                  elevation: 4.0,
                  shadowColor: const Color.fromARGB(255, 206, 209, 211),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10.0),
                  ),
                  child: Row(
                    children: [
                      Container(
                        width: 50.0,
                        height: 50.0,
                        margin: const EdgeInsets.all(
                            26.0), // Marge entre le cercle et le texte
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          border: Border.all(color: Colors.blue, width: 2.0),
                          color: Colors.green,
                        ),
                        child: const CircleAvatar(
                          backgroundImage: NetworkImage(
                            "https://burkina24.com/wp-content/uploads/2022/08/2C5330B8-BBDB-4A1F-BC3A-C6554877AA3D.jpeg",
                          ),
                          radius: 100,
                        ),
                      ),
                      Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          RichText(
                            text: const TextSpan(
                              text: 'A la une\n',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 16.0,
                                color: Colors.black,
                              ),
                              children: [
                                TextSpan(
                                  text:
                                      "Suivez l'actualité partagée par la CIL",
                                  style: TextStyle(
                                    fontSize: 14.0,
                                    color: Colors.black,
                                    fontStyle: FontStyle.italic,
                                    fontWeight: FontWeight.normal,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          // Autres widgets ici
                        ],
                      ),
                    ],
                  ),
                ),
              ),
              if (showStory)
                Expanded(
                  child: StoryView(
                    storyItems: storyItems,
                    controller: controller,
                    repeat: false,
                    inline: false,
                    onComplete: () {
                      Navigator.pop(context);
                    },
                  ),
                ),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                padding:
                    const EdgeInsets.symmetric(horizontal: 24, vertical: 16),
                child: Row(
                  children: [
                    // Première carte
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey,
                            width: 1,
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/bananas.jpg',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 1',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 1'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Deuxième carte
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width / (2.5),
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                          side: BorderSide(
                            color: Colors.grey, // Couleur de la bordure
                            width: 1, // Largeur de la bordure
                          ),
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            AspectRatio(
                              aspectRatio: 16 /
                                  9, // Ratio d'aspect de l'image (peut être différent pour chaque image)
                              child: Image.asset(
                                'assets/images/logo_cil.png',
                                fit: BoxFit.cover,
                              ),
                            ),
                            const Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    'Titre 2',
                                    style:
                                        TextStyle(fontWeight: FontWeight.bold),
                                  ),
                                  Text('Sous-titre 2'),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    // Ajoutez les autres cartes de la même manière
                  ],
                ),
              ),
              Card(
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15.0),
                ),
                elevation: 4,

                margin: EdgeInsets.all(10), // Marge autour de la carte
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.only(
                          topLeft: Radius.circular(15),
                          topRight: Radius.circular(15),
                        ),
                      ),
                      padding: EdgeInsets.all(10),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: <Widget>[
                          Text(
                            'La protection de vos données',
                            style: TextStyle(
                              color:
                                  Colors.black, // Couleur du texte de l'en-tête
                              fontWeight: FontWeight.bold, // Texte en gras
                            ),
                          ),
                          Divider(), // Diviseur entre l'en-tête et le corps
                        ],
                      ),
                    ),
                    Padding(
                      padding: EdgeInsets.all(10),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: <Widget>[
                          SizedBox(
                              height:
                                  5), // Espacement entre le titre et le contenu

                          SingleChildScrollView(
                            child: Card(
                              margin: EdgeInsets.all(16.0),
                              elevation: 4.0,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(15.0),
                              ),
                              child: Container(
                                height:
                                    MediaQuery.of(context).size.height - 300.0,
                                decoration: BoxDecoration(
                                  gradient: LinearGradient(
                                    begin: Alignment.topLeft,
                                    end: Alignment.bottomRight,
                                    colors: [Colors.blue, Colors.green],
                                  ),
                                ),
                                child: Stack(
                                  children: [
                                    // Contenu de la carte
                                    Padding(
                                      padding: EdgeInsets.all(16.0),
                                      child: Column(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Protections sur les réseaux sociaux',
                                            style: TextStyle(
                                              fontSize: 24.0,
                                              fontWeight: FontWeight.bold,
                                            ),
                                            softWrap: true,
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.access_time),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Première ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.star),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Deuxième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                          SizedBox(height: 8.0),
                                          Row(
                                            children: [
                                              Icon(Icons.favorite),
                                              SizedBox(width: 8.0),
                                              Expanded(
                                                child: Text(
                                                  'Troisième ligne de texte',
                                                  softWrap: true,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              )
            ],
          ),

          // Notifications page

          const Padding(
            padding: EdgeInsets.all(28.0),
            child: Column(
              children: <Widget>[
                Padding(
                  padding: EdgeInsets.symmetric(vertical: 8.0),
                  child: Card(
                    child: ListTile(
                      leading: CircleAvatar(
                        backgroundColor:
                            Colors.blue, // Couleur de fond du cercle
                        child: Icon(
                          Icons.notifications_sharp,
                          color: Colors.white, // Couleur de l'icône
                        ),
                      ),
                      title: Text('Notification 1'),
                      subtitle: Text('This is a notification'),
                    ),
                  ),
                ),
              ],
            ),
          ),
          // Messages page
          ListView.builder(
            reverse: true,
            itemCount: 2,
            itemBuilder: (BuildContext context, int index) {
              if (index == 0) {
                return Align(
                  alignment: Alignment.centerRight,
                  child: Container(
                    margin: const EdgeInsets.all(8.0),
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: theme.colorScheme.primary,
                      borderRadius: BorderRadius.circular(8.0),
                    ),
                    child: Text(
                      'Hello',
                      style: theme.textTheme.bodyLarge!
                          .copyWith(color: theme.colorScheme.onPrimary),
                    ),
                  ),
                );
              }
              return Align(
                alignment: Alignment.centerLeft,
                child: Container(
                  margin: const EdgeInsets.all(8.0),
                  padding: const EdgeInsets.all(8.0),
                  decoration: BoxDecoration(
                    color: theme.colorScheme.primary,
                    borderRadius: BorderRadius.circular(8.0),
                  ),
                  child: Text(
                    'Hi!',
                    style: theme.textTheme.bodyLarge!
                        .copyWith(color: theme.colorScheme.onPrimary),
                  ),
                ),
              );
            },
          ),
        ],
      ),
    );
  }
}

 
onTap: (int index) {
          setState(() {
            currentPageIndex = index;
          });
 
 onDestinationSelected: (int index) {
          setState(() {
            currentPageIndex = index;
          });
        },
 
const
 
DocumentsPage(),
 
ConseilsPage(),
 
currentPageIndex
 
case 3:
              page = DocumentsPage();
              break;
 
case 1:
              page = ConseilsPage();
              break;
 
 Visibility(
            visible: currentPageIndex == 3,
            child: DocumentsView(),
          ),
 
Visibility(
            visible: currentPageIndex == 1,
            child: ConseilsView(),
          ),
 
WidgetsFlutterBinding.ensureInitialized();
  final appDocumentDirectory = await getApplicationDocumentsDirectory();
  Hive.init(appDocumentDirectory.path);

 
  var conseilsBox = Hive.box<Conseil>('conseils');

 
conseilsBox.add(Conseil('A faire', 'JJHJ', '', false));
  conseilsBox.add(
      Conseil('Titre', 'Description', 'Image', true)); // Ajout de cet appel
 
// Couleur de la bordure
 
// Largeur de la bordure
 
FutureBuilder(
                future: Hive.openBox<Conseil>('conseils'),
                builder: (context, AsyncSnapshot<Box<Conseil>> snapshot) {
                  if (snapshot.connectionState == ConnectionState.done) {
                    if (snapshot.hasError) {
                      return Center(
                        child: Text('Error: ${snapshot.error}'),
                      );
                    } else {
                      var conseils = snapshot.data!.values.toList();
                      return ListView.builder(
                        itemCount: conseils.length,
                        itemBuilder: (context, index) {
                          var conseil = conseils[index];
                          return ListTile(
                            title: Text(conseil.titre),
                            subtitle: Text(conseil.description),
                          );
                        },
                      );
                    }
                  } else {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                },
              ),
 
  conseilsBox.add(Conseil('A faire', 'JJHJ', '', false));

 
conseilsBox.add(
      ConseilconseilsBox.add(Conseil('A faire', 'JJHJ', '', false)););

 
titre: 'Ecrire un article de blog',
 
 Lister les tâches = 
 
  var quizBox = Hive.box<>;

 
('conseils')
 
Hive.init(appDocumentDirectory.path);
  await Hive.initFlutter();
 
Hive.init(appDocumentDirectory.path);
  await Hive.initFlutter();
 
 // Élévation de la carte
 
MediaQuery.of(context).size.height
 
MediaQuery.of(context).size.height
 
kBottomNavigationBarHeight -
                                    300.0
 
kBottomNavigationBarHeight -
                                    300.0)
 
image: AssetImage(
                                              'assets/images/protection-concept-with-lock.jpg'),
 
assetpath
 
ackground_image.jpg
 
Text(
                            'Titre de la carte',
                            style: TextStyle(
                              fontWeight: FontWeight.bold, // Texte en gras
                              fontSize: 18, // Taille de la police
                            ),
                          ),
 
// Icône de coche
 
// Couleur de fond verte
 
import 'dart:convert';
 
token2?
 
token2 = '';
 
= ''
 
get
 
response.body.
 
'./data/token_local_storage.dart' as token_local_storage
 
data
 
final response = await http.post(
    body:,
  );
 
{'key': 'value'}
 
    Uri.parse('http://192.168.11.101:3000/api/auth/login'),

 
example.com
 
void main() => runApp(const NavigationBarApp());
Future<void> fetchData() async {
  final url =
      Uri.https('http://serveururl/api/conseils/mobile.com', '/api/data');
  final response = await http.get(url);

  if (response.statusCode == 200) {
    // Request was successful, parse the response data
    final jsonData = jsonDecode(response.body);
    // Process the data as needed
    print(jsonData);
  } else {
    // Request failed with an error code, handle the error
    print('Request failed with status: ${response.statusCode}');
  }
}

 
Future<void> fetchData() async {
  final url =
      Uri.https('http://serveururl/api/conseils/mobile.com', '/api/data');
  final response = await http.get(url);

  if (response.statusCode == 200) {
    
    final jsonData = jsonDecode(response.body);
    
    print(jsonData);
  } else {
    
    print('Request failed with status: ${response.statusCode}');
  }
}
 
@override
void initState() {
  super.initState();
  fetchData(); // Appel de la fonction fetchData pour récupérer les données
}
 
// Request was successful, parse the response data
 
// Request failed with an error code, handle the error
 
// Process the data as needed
 
image1.jpg
 
                    // Autres cartes similaires ici

 
// Ajoutez ici vos FillImageCard supplémentaires
              FillImageCard(
                width: 100,
                heightImage: 70,
                imageProvider: AssetImage('assets/images/logo_cil.png'),
                tags: [],
                title: const Text('data'),
                description: const Text('data'),
              ),
 
_tag('Category', () {}), _tag('Product', () {})
 
_title(),
 
 child: SingleChildScrollView(
  padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 16),
  child: Column(
    crossAxisAlignment: CrossAxisAlignment.start,
    mainAxisSize: MainAxisSize.min,
    children: [
      const SizedBox(height: 12),
      SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Row(
          children: [
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {}), _tag('Product', () {})],
              title: _title(),
              description: _content(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {}), _tag('Product', () {})],
              title: _title(),
              description: _content(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              description: _content(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {})],
            ),
          ],
        ),
      ),
      const SizedBox(height: 12),
      SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Row(
          children: [
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {})],
              title: _title(),
              description: _content(),
              footer: _footer(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {})],
              title: _title(),
              description: _content(),
              footer: _footer(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [_tag('Category', () {}), _tag('Product', () {})],
              footer: _footer(),
            ),
            const SizedBox(width: 12),
            FillImageCard(
              width: 200,
              heightImage: 140,
              imageProvider: AssetImage('assets/mockup.png'),
              footer: _footer(),
            ),
          ],
        ),
      ),
      const SizedBox(height: 12),
      SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Row(
          children: [
            TransparentImageCard(
              width: 200,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [
                _tag('Product', () {}),
              ],
              title: _title(color: Colors.white),
              description: _content(color: Colors.white),
            ),
            const SizedBox(width: 12),
            TransparentImageCard(
              width: 200,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [
                _tag('Product', () {}),
                _tag('Gift', () {}),
              ],
              title: _title(color: Colors.white),
              description: _content(color: Colors.white),
              footer: _footer(color: Colors.white),
            ),
            const SizedBox(width: 12),
            TransparentImageCard(
              width: 200,
              imageProvider: AssetImage('assets/mockup.png'),
              tags: [
                _tag('Product', () {}),
                _tag('Gift', () {}),
                _tag('Category', () {}),
              ],
              footer: _footer(color: Colors.white),
            ),
            const SizedBox(width: 12),
            TransparentImageCard(
              width: 200,
              imageProvider: AssetImage('assets/mockup.png'),
              title: _title(color: Colors.white),
              description: _content(color: Colors.white),
            ),
          ],
        ),
      ),
      const SizedBox(height: 12),
    ],
  ),
),
 
if (index == 2) {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => QuizPage()),
            );
          }
 
import 'quiz.dart';
 
const
 
assets/mockup.png
 
_tag('Category', () {}), _tag('Product', () {})
 
Description
 
Description
 
                        tags: [_tag('Category', () {}), _tag('Product', () {})],

 
const
 
Card(
                  
                ),
 
const
 
olors.green
 
lightbulb
 
            selectedIcon: Icon(Icons.home),

 
const
 
notifications_sharp
 
                Icons.done_sharp,

 
const
 
ListView(
                    scrollDirection: Axis.horizontal,
                    children: <Widget>[
                      Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.message),
                            Text('Messages'),
                          ],
                        ),
                      ),
                      Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.settings),
                            Text('Settings'),
                          ],
                        ),
                      ),
                    ],
                  ),
 
Row(),
 
Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceAround,
                      children: [
                        _buildCard(stories[1]),
                        _buildCard(stories[2]),
                      ],
                    ),
                  ),,
 
 Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.home),
                            Text('Home'),
                          ],
                        ),
                      ),
                      Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.notifications),
                            Text('Notifications'),
                          ],
                        ),
                      ),
                      
                    
 
Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.message),
                            Text('Messages'),
                          ],
                        ),
                      ),
                      Container(
                        width: 150,
                        margin: EdgeInsets.all(8.0),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10.0),
                          color: Colors.white,
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.5),
                              spreadRadius: 2,
                              blurRadius: 3,
                              offset:
                                  Offset(0, 2), // changes position of shadow
                            ),
                          ],
                        ),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            Icon(Icons.settings),
                            Text('Settings'),
                          ],
                        ),
                      ),
 
scrollDirection: Axis.horizontal,
 

                            right:
 
],
                        ),
                      )
 
TextSpan(
                          children: const <TextSpan>[
                            TextSpan(
                              text: 'A la une',
                            ),
 
style: DefaultTextStyle.of(context).style,
 
style: TextStyle(fontWeight: FontWeight.bold)
 
style: TextStyle(fontWeight: FontWeight.bold)),
 
child: Image.network(
                            "https://burkina24.com/wp-content/uploads/2022/08/2C5330B8-BBDB-4A1F-BC3A-C6554877AA3D.jpeg",
                            fit: BoxFit.cover,
                          ),
 
text: 'Hello ',
 
 TextSpan(text: ' world!'),
 
RGB
 
Card(
                  child: ListTile(
                    leading: Icon(Icons.notifications_sharp),
                    title: Text('Notification 2'),
                    subtitle: Text('This is a notification'),
                  ),
                ),
 
import 'package:flutter/material.dart';
 
title: 'Flutter Demo Home Page'
 
home
 
@HiveField(0)
  late String username;
 
, required this.email, required this.password
 
@HiveField(1)
  late String email;

  @HiveField(2)
  late String password;
 
import 'package:hive/hive.dart';

part 'my_model.g.dart'; // Le fichier my_model.g.dart sera généré par Hive

@HiveType(typeId: 1)
class MyModel extends HiveObject {
  @HiveField(0)
  late String name;

  @HiveField(1)
  late int age;
}
 
void main() async {
await Hive.initFlutter();
runApp (MyApp());
}
 
import 'package:flutter/material.dart';
 
